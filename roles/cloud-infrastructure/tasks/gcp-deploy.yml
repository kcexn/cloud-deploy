---
- name: Create SSH firewall rule
  tags:
    - deploy
  google.cloud.gcp_compute_firewall:
    name: "{{ vpc_name | default('ansible') }}-allow"
    network: "{{ vpc }}"
    allowed:
      - ip_protocol: tcp
        ports: "{{ firewall_ports }}"
      - ip_protocol: icmp
    source_ranges: "{{ firewall_source_ranges }}"
    target_tags:
      - "{{ instance_tags | default(['ansible-vm']) | first }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_auth_kind | default('serviceaccount') }}"
    service_account_file: "{{ gcp_service_account_file }}"
    state: present

- name: Launch GCP compute instance
  tags:
    - deploy
  google.cloud.gcp_compute_instance:
    name: "{{ item.key }}"
    machine_type: "{{ machine_type | default('e2-micro') }}"
    zone: "{{ region }}-{{ item.value.zone_suffix | default('a') }}"
    disks:
      - auto_delete: true
        boot: true
        initialize_params:
          source_image: "{{ source_image | default('projects/ubuntu-os-cloud/global/images/family/ubuntu-2004-lts') }}"
          disk_size_gb: "{{ disk_size_gb | default(20) }}"
    network_interfaces:
      - network: "{{ vpc }}"
        network_ip: "{{ item.value.ansible_host }}"
        access_configs:
          - name: External NAT
            type: ONE_TO_ONE_NAT
    tags:
      items: "{{ instance_tags | default(['ansible-vm']) }}"
    labels:
      environment: "{{ env }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_auth_kind | default('serviceaccount') }}"
    service_account_file: "{{ gcp_service_account_file }}"
    metadata:
      enable-oslogin: "TRUE"
      enable-osconfig: "TRUE"
    service_accounts:
      - email: "{{ gcp_project_id }}-compute@developer.gserviceaccount.com"
        scopes:
          - "https://www.googleapis.com/auth/devstorage.read_only"
          - "https://www.googleapis.com/auth/logging.write"
          - "https://www.googleapis.com/auth/monitoring.write"
          - "https://www.googleapis.com/auth/service.management.readonly"
          - "https://www.googleapis.com/auth/servicecontrol"
          - "https://www.googleapis.com/auth/trace.append"
    state: present
  register: gcp_instance_async
  async: 300
  poll: 0
  loop: "{{ hostvars | dict2items | selectattr('key', 'in', groups[target_group]) | list }}"

- name: Wait for all instances to be created
  tags:
    - deploy
  async_status:
    jid: "{{ item.ansible_job_id }}"
  register: gcp_instance
  until: gcp_instance.finished
  retries: 60
  delay: 5
  loop: "{{ gcp_instance_async.results }}"
