# Cluster deployment automation system
# Copyright 2025 Kevin Exton
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.

---
- name: Install python3-full package
  ansible.builtin.package:
    name: python3-full
    state: present
  tags: ["kubernetes", "dependencies"]

- name: Create Python virtual environment for ansible
  ansible.builtin.command: python3 -m venv {{ ansible_env.PWD }}/venv
  args:
    creates: "{{ ansible_env.PWD }}/venv"
  become: true
  become_user: "{{ ansible_user }}"
  tags: ["kubernetes", "dependencies"]

- name: Install Python dependencies in virtual environment
  ansible.builtin.pip:
    name:
      - kubernetes>=24.2.0
      - PyYAML>=3.11
      - jsonpatch
    state: present
    virtualenv: "{{ ansible_env.PWD }}/venv"
  become: true
  become_user: "{{ ansible_user }}"
  when: inventory_hostname in groups['controller']
  tags: ["kubernetes", "dependencies"]

- name: Check if Helm binary exists
  ansible.builtin.stat:
    path: "/usr/local/bin/helm"
  register: stat_result
  when: inventory_hostname in groups['controller']
  tags: ["kubernetes", "dependencies"]

- name: Download and extract Helm
  ansible.builtin.unarchive:
    src: "{{ kubernetes_helm_install_url }}"
    dest: "{{ ansible_env.PWD }}"
    remote_src: true
    mode: "0755"
  when:
    - inventory_hostname in groups['controller']
    - not stat_result.stat.exists
  tags: ["kubernetes", "dependencies"]

- name: Install Helm
  ansible.builtin.copy:
    src: "{{ ansible_env.PWD }}/{{ kubernetes_helm_dist }}/helm"
    dest: "/usr/local/bin/helm"
    remote_src: true
    mode: "0755"
  when:
    - inventory_hostname in groups['controller']
    - not stat_result.stat.exists
  tags: ["kubernetes", "dependencies"]

- name: Remove Helm temporary directory
  ansible.builtin.file:
    path: "{{ ansible_env.PWD }}/{{ kubernetes_helm_dist }}"
    state: absent
  when: inventory_hostname in groups['controller']
  tags: ["kubernetes", "dependencies"]

- name: Install Helm diff plugin
  ansible.builtin.command: helm plugin install https://github.com/databus23/helm-diff
  args:
    creates: "{{ ansible_env.HOME }}/.local/share/helm/plugins/helm-diff"
  when: inventory_hostname in groups['controller']
  tags: ["kubernetes", "dependencies"]

- name: Check if kustomize binary exists
  ansible.builtin.stat:
    path: "/usr/local/bin/kustomize"
  register: kustomize_stat
  when: inventory_hostname in groups['controller']
  tags: ["kubernetes", "dependencies"]

- name: Download the kustomize install script
  ansible.builtin.get_url:
    url: "{{ kubernetes_kustomize_install_url }}"
    dest: "{{ ansible_env.PWD }}"
    mode: "0755"
  when:
    - inventory_hostname in groups['controller']
    - not kustomize_stat.stat.exists
  tags:
    - kubernetes
    - dependencies

- name: Execute kustomize install script
  ansible.builtin.command:
    cmd: "{{ ansible_env.PWD }}/{{ kubernetes_kustomize_install_basename }} \
      {{ kubernetes_kustomize_install_prefix }}"
  args:
    creates: "{{ kubernetes_kustomize_install_prefix }}/kustomize"
  when:
    - inventory_hostname in groups['controller']
    - not kustomize_stat.stat.exists
  tags:
    - kubernetes
    - dependencies

- name: Delete install_kustomize.sh
  ansible.builtin.file:
    path: "{{ ansible_env.PWD }}/{{ kubernetes_kustomize_install_basename }}"
    state: absent
  when: inventory_hostname in groups['controller']
  tags: ["kubernetes", "dependencies"]
